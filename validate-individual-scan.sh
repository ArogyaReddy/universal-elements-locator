#!/bin/bash

# Quick validation script for Individual Element Scanning implementation
echo "üéØ Universal Element Locator - Individual Scanning Validation"
echo "============================================================="

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

echo -e "${BLUE}üìÅ Validating extension files in: $SCRIPT_DIR${NC}"

# 1. Check all required files exist
echo -e "${YELLOW}üîç Checking file existence...${NC}"
files_check=true

required_files=(
    "manifest.json"
    "popup.html"
    "popup.js"
    "content.js"
    "individual-scan-test.html"
    "test-individual-scan.sh"
    "INDIVIDUAL_SCANNING_COMPLETE.md"
)

for file in "${required_files[@]}"; do
    if [[ -f "$SCRIPT_DIR/$file" ]]; then
        echo -e "${GREEN}  ‚úÖ $file${NC}"
    else
        echo -e "${RED}  ‚ùå $file (missing)${NC}"
        files_check=false
    fi
done

# 2. Check popup.html for new UI elements
echo -e "${YELLOW}üîç Checking popup.html for individual tools...${NC}"
if grep -q "individual-tools" "$SCRIPT_DIR/popup.html"; then
    echo -e "${GREEN}  ‚úÖ Individual tools section found${NC}"
else
    echo -e "${RED}  ‚ùå Individual tools section missing${NC}"
    files_check=false
fi

if grep -q "scanElementButton" "$SCRIPT_DIR/popup.html"; then
    echo -e "${GREEN}  ‚úÖ Scan Element button found${NC}"
else
    echo -e "${RED}  ‚ùå Scan Element button missing${NC}"
    files_check=false
fi

if grep -q "highlightElementButton" "$SCRIPT_DIR/popup.html"; then
    echo -e "${GREEN}  ‚úÖ Highlight Element button found${NC}"
else
    echo -e "${RED}  ‚ùå Highlight Element button missing${NC}"
    files_check=false
fi

# 3. Check popup.js for new functionality
echo -e "${YELLOW}üîç Checking popup.js for individual scanning functions...${NC}"
if grep -q "toggleElementScan" "$SCRIPT_DIR/popup.js"; then
    echo -e "${GREEN}  ‚úÖ toggleElementScan function found${NC}"
else
    echo -e "${RED}  ‚ùå toggleElementScan function missing${NC}"
    files_check=false
fi

if grep -q "highlightSelectedElement" "$SCRIPT_DIR/popup.js"; then
    echo -e "${GREEN}  ‚úÖ highlightSelectedElement function found${NC}"
else
    echo -e "${RED}  ‚ùå highlightSelectedElement function missing${NC}"
    files_check=false
fi

if grep -q "displaySelectedElement" "$SCRIPT_DIR/popup.js"; then
    echo -e "${GREEN}  ‚úÖ displaySelectedElement function found${NC}"
else
    echo -e "${RED}  ‚ùå displaySelectedElement function missing${NC}"
    files_check=false
fi

# 4. Check content.js for new message handlers
echo -e "${YELLOW}üîç Checking content.js for individual scanning handlers...${NC}"
if grep -q "startElementScan" "$SCRIPT_DIR/content.js"; then
    echo -e "${GREEN}  ‚úÖ startElementScan handler found${NC}"
else
    echo -e "${RED}  ‚ùå startElementScan handler missing${NC}"
    files_check=false
fi

if grep -q "startIndividualElementScan" "$SCRIPT_DIR/content.js"; then
    echo -e "${GREEN}  ‚úÖ startIndividualElementScan function found${NC}"
else
    echo -e "${RED}  ‚ùå startIndividualElementScan function missing${NC}"
    files_check=false
fi

if grep -q "highlightSelectedElement" "$SCRIPT_DIR/content.js"; then
    echo -e "${GREEN}  ‚úÖ highlightSelectedElement function found${NC}"
else
    echo -e "${RED}  ‚ùå highlightSelectedElement function missing${NC}"
    files_check=false
fi

# 5. Check CSS styling for individual tools
echo -e "${YELLOW}üîç Checking popup.html for individual tools CSS...${NC}"
if grep -q "individual-tools" "$SCRIPT_DIR/popup.html" && grep -q "tool-btn" "$SCRIPT_DIR/popup.html"; then
    echo -e "${GREEN}  ‚úÖ Individual tools CSS classes found${NC}"
else
    echo -e "${RED}  ‚ùå Individual tools CSS classes missing${NC}"
    files_check=false
fi

# 6. Check test page content
echo -e "${YELLOW}üîç Checking test page content...${NC}"
if grep -q "Individual Element Scan Test" "$SCRIPT_DIR/individual-scan-test.html"; then
    echo -e "${GREEN}  ‚úÖ Test page title found${NC}"
else
    echo -e "${RED}  ‚ùå Test page title missing${NC}"
    files_check=false
fi

if grep -q "data-testid" "$SCRIPT_DIR/individual-scan-test.html"; then
    echo -e "${GREEN}  ‚úÖ Test elements with attributes found${NC}"
else
    echo -e "${RED}  ‚ùå Test elements with attributes missing${NC}"
    files_check=false
fi

# 7. Check manifest.json permissions
echo -e "${YELLOW}üîç Checking manifest.json permissions...${NC}"
if grep -q '"activeTab"' "$SCRIPT_DIR/manifest.json"; then
    echo -e "${GREEN}  ‚úÖ activeTab permission found${NC}"
else
    echo -e "${RED}  ‚ùå activeTab permission missing${NC}"
    files_check=false
fi

if grep -q '"scripting"' "$SCRIPT_DIR/manifest.json"; then
    echo -e "${GREEN}  ‚úÖ scripting permission found${NC}"
else
    echo -e "${RED}  ‚ùå scripting permission missing${NC}"
    files_check=false
fi

# 8. Check for syntax issues (basic validation)
echo -e "${YELLOW}üîç Checking for basic syntax issues...${NC}"

# Check for unmatched braces in JS files
for js_file in "popup.js" "content.js"; do
    if [[ -f "$SCRIPT_DIR/$js_file" ]]; then
        # Count opening and closing braces
        open_braces=$(grep -o '{' "$SCRIPT_DIR/$js_file" | wc -l)
        close_braces=$(grep -o '}' "$SCRIPT_DIR/$js_file" | wc -l)
        
        if [[ $open_braces -eq $close_braces ]]; then
            echo -e "${GREEN}  ‚úÖ $js_file - Braces balanced${NC}"
        else
            echo -e "${RED}  ‚ùå $js_file - Unmatched braces (${open_braces} open, ${close_braces} close)${NC}"
            files_check=false
        fi
    fi
done

# Final validation result
echo ""
echo -e "${BLUE}üìã VALIDATION SUMMARY${NC}"
echo "===================="

if $files_check; then
    echo -e "${GREEN}‚úÖ ALL CHECKS PASSED${NC}"
    echo -e "${GREEN}üéØ Individual Element Scanning implementation is complete and ready for testing!${NC}"
    echo ""
    echo -e "${BLUE}üìã Implementation Summary:${NC}"
    echo "‚Ä¢ ‚úÖ Individual Element Tools UI added to popup"
    echo "‚Ä¢ ‚úÖ Scan Element functionality implemented"
    echo "‚Ä¢ ‚úÖ Highlight Element functionality implemented"
    echo "‚Ä¢ ‚úÖ Content script handlers added"
    echo "‚Ä¢ ‚úÖ CSS styling complete"
    echo "‚Ä¢ ‚úÖ Test page created"
    echo "‚Ä¢ ‚úÖ Documentation complete"
    echo ""
    echo -e "${YELLOW}üöÄ Next Steps:${NC}"
    echo "1. Load the extension in Chrome (chrome://extensions/)"
    echo "2. Run: ./test-individual-scan.sh"
    echo "3. Test individual element scanning on the test page"
    echo "4. Verify highlighting functionality works"
    echo ""
    echo -e "${GREEN}üéØ Ready for production use!${NC}"
else
    echo -e "${RED}‚ùå VALIDATION FAILED${NC}"
    echo -e "${RED}Some components are missing or incorrect. Please review the errors above.${NC}"
fi

echo ""
echo -e "${BLUE}Files validated:${NC}"
for file in "${required_files[@]}"; do
    if [[ -f "$SCRIPT_DIR/$file" ]]; then
        size=$(wc -c < "$SCRIPT_DIR/$file")
        echo "  üìÑ $file (${size} bytes)"
    fi
done

echo ""
echo -e "${BLUE}üîß To test manually:${NC}"
echo "1. Open Chrome and go to chrome://extensions/"
echo "2. Enable Developer mode"
echo "3. Click 'Load unpacked' and select this directory"
echo "4. Open the test page: file://$SCRIPT_DIR/individual-scan-test.html"
echo "5. Click the extension icon and test individual scanning"
